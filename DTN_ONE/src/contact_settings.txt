#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = Connectivity_scenario_%%Group.router%%_%%Group5.nrofHosts%%_%%Scenario.endTime%%
# No of hosts =255
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 43200
#Scenario.endTime = [3600; 5400; 7200; 9000; 10800; 12600; 14400; 16200; 18000; 19800; 21600; 23400; 25200; 27000; 28800; 30600; 32400; 34200; 36000; 37800; 39600; 41400; 43200;]
## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# High speed, long range, interface for group 4
#highspeedInterface.type = SimpleBroadcastInterface
#highspeedInterface.transmitSpeed = 10M
#highspeedInterface.transmitRange = 1000

# Define different node groups
Scenario.nrofHostGroups = 5

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for ShortestPathMapBasedMovement
# routeType: route's type - for ShortestPathMapBasedMovement


Group.movementModel = ClusterMovement
#Group.router = EpidemicRouter
#Group.router = SprayAndWaitRouter
Group.router = ProphetRouter
#Group.router = MaxPropRouter

Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
#Group.speed = 0.5, 1.5
#Group.speed = 15.0
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 720

#Group.nrofHosts = 5

# The Shelter Group
Group1.groupID = Shelter
Group1.bufferSize = 100M
Group1.movementModel = StationaryMovement
Group1.nodeLocation= 930,680
Group1.speed = 0,0
Group1.nrofHosts = 1
# The Shelter Group
Group2.groupID = Shelter
Group2.bufferSize = 100M
Group2.movementModel = StationaryMovement
Group2.nodeLocation= 240,530
Group2.speed = 0,0
Group2.nrofHosts = 1
# The Shelter Group
Group3.groupID = Shelter
Group3.bufferSize = 100M
Group3.movementModel = StationaryMovement
Group3.nodeLocation= 250,170
Group3.speed = 0,0
Group3.nrofHosts = 1
# The Shelter Group
Group4.groupID = Shelter
Group4.bufferSize = 100M
Group4.movementModel = StationaryMovement
Group4.nodeLocation= 770,190
Group4.speed = 0,0
Group4.nrofHosts = 1

Group5.groupID = node_
Group5.movementModel = ClusterMovement
Group5.clusterRange = 600
Group5.clusterCenter = 570,610
#Group5.nrofHosts = [5; 10; 15; 20; 25; 30; 35; 40; 45; 50; 55]
Group5.nrofHosts = 35
Group5.speed = 0.5, 1.5
Group5.speed = [0.5, 0.5; 1, 1; 1.5, 1.5; 2.0, 2.0; 2.5, 2.5; 3, 3; 3.5, 3.5; 4, 4; 4.5, 4.5; 5,5]
## Message creation parameters 
# How many event generators
Events.nrof = 4
# Class of the first event generator
#Events1.class = MessageEventGenerator
Events1.class =OneToEachMessageGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1
#Events1.interval = 1,43200
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,0
Events1.tohosts = 0,4
# Message ID prefix
Events1.prefix = ME1_

Events2.class =OneToEachMessageGenerator
Events2.interval = 1
Events2.size = 500k,1M
Events2.hosts = 1,1
Events2.tohosts = 0,4
Events2.prefix = ME2_

Events3.class =OneToEachMessageGenerator
Events3.interval = 1
Events3.size = 500k,1M
Events3.hosts = 2,2
Events3.tohosts = 0,4
Events3.prefix = ME3_

Events4.class =OneToEachMessageGenerator
Events4.interval = 1
Events4.size = 500k,1M
Events4.hosts = 3,3
Events4.tohosts = 0,4
Events4.prefix = ME4_

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
#Report.granularity=Scenario.endTime
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = contact_reports/ProphetRouter/detailed
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = TotalContactDuration

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
#ProphetV2Router.secondsInTimeUnit = 30
ProphetRouter.alpha = 0.5
ProphetRouter.beta = 0.5
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/uttarakhand1.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
